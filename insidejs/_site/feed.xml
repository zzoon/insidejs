<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>InsideJS</title>
    <description>이 블로그는 &quot;http://nodejs-kr.org/insidejs&quot; 의 블로그를 migration 하였습니다. migration 중에 깨진 이미지나 소스코드는 추후 개선 예정입니다. 양해 부탁드립니다.
</description>
    <link>http://zzoon.github.io/insidejs/insidejs/</link>
    <atom:link href="http://zzoon.github.io/insidejs/insidejs/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 10 Apr 2016 21:49:37 +0900</pubDate>
    <lastBuildDate>Sun, 10 Apr 2016 21:49:37 +0900</lastBuildDate>
    <generator>Jekyll v3.0.3</generator>
    
      <item>
        <title>인사이드 자바스크립트 출간 기념 2천원 할인 쿠폰 배너</title>
        <description>&lt;p&gt;드디어 자바스크립트를 주제로 한 책을 출간하게 되었다.&lt;/p&gt;

&lt;!-- &lt;a href=&quot;http://www.yes24.com/24/goods/11781589&quot; target=&quot;_blank&quot;&gt;&lt;img class=&quot;aligncenter size-full wp-image-927&quot; alt=&quot;사진&quot; src=&quot;http://nodejs-kr.org/wordpress/wp-content/uploads/2014/01/사진.jpg&quot; width=&quot;313&quot; height=&quot;400&quot; /&gt;&lt;/a&gt;
--&gt;
&lt;p&gt;&lt;a href=&quot;http://www.yes24.com/24/goods/11781589&quot; target=&quot;_blank&quot;&gt; &lt;img src=&quot;http://zzoon.github.io/insidejs/assets/book.jpg&quot; alt=&quot;&quot; /&gt; &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;사실 집필은 좀더 일찍 마무리되었는데, 이래저래 시간이 지연되면서, 2014년을 맞이하면서 책이 출간되었다.
타이밍 맞게 출간되었다면, 훨씬 뿌듯하고 좋았을텐데.. 너무 늦게 나와 아쉬운 마음이 더 크게 든다.&lt;/p&gt;

&lt;p&gt;아래는 2천원 할인 쿠폰을 받을 수 있는 배너입니다. 교보문고와 yes24에서 할인받을 수 있도록 프로모션을 진행중입니다.
2014년 1월 19일까지 진행되니 많은 참여바랍니다.&lt;/p&gt;

&lt;p&gt;[ YES24 ]
&lt;a href=&quot;http://me2.do/Gj9HJKb5&quot;&gt;http://me2.do/Gj9HJKb5&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;이곳으로 접속하시면 예스24 회원 로그인을 하라는 메시지가 뜹니다(회원 로그인을 해야 쿠폰이 발급됩니다).
로그인을 하면 2천원 할인쿠폰이 발급됩니다.
발급된 쿠폰은 메뉴 상단 [마이페이지]를 클릭하고, 이어서 나오는 페이지의 좌측 [쿠폰]을 클릭하면 확인할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&amp;lt;인사이드 자바스크립트&amp;gt; 구입 시에만 적용되는 2천원 할인쿠폰이 보입니다.&lt;/p&gt;

&lt;p&gt;[ 교보문고 ]
&lt;a href=&quot;http://www.kyobobook.co.kr/index.laf?emailCheck=true&amp;amp;couponId=CB5IOcZhIUaqOI6MgsKdOQ~&quot;&gt;http://www.kyobobook.co.kr/index.laf?emailCheck=true&amp;amp;couponId=CB5IOcZhIUaqOI6MgsKdOQ~&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;이곳으로 접속하시면 교보문고 로그인을 하라는 메시지가 뜹니다(회원 로그인을 해야 쿠폰이 발급됩니다).
로그인을 하면 2천원 할인쿠폰이 발급됩니다.
발급된 쿠폰은 메뉴 상단 [마이룸]를 클릭하고, 이어서 나오는 페이지의 좌측 [할인쿠폰]을 클릭하면 확인할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&amp;lt;인사이드 자바스크립트&amp;gt; 구입 시에만 적용되는 2천원 할인쿠폰이 보입니다.&lt;/p&gt;
</description>
        <pubDate>Tue, 07 Jan 2014 23:36:35 +0900</pubDate>
        <link>http://zzoon.github.io/insidejs/insidejs/2014/01/07/ec-9d-b8-ec-82-ac-ec-9d-b4-eb-93-9c-ec-9e-90-eb-b0-94-ec-8a-a4-ed-81-ac-eb-a6-bd-ed-8a-b8-ec-b6-9c-ea-b0-84-ea-b8-b0-eb-85-90-2-ec-b2-9c-ec-9b-90.html</link>
        <guid isPermaLink="true">http://zzoon.github.io/insidejs/insidejs/2014/01/07/ec-9d-b8-ec-82-ac-ec-9d-b4-eb-93-9c-ec-9e-90-eb-b0-94-ec-8a-a4-ed-81-ac-eb-a6-bd-ed-8a-b8-ec-b6-9c-ea-b0-84-ea-b8-b0-eb-85-90-2-ec-b2-9c-ec-9b-90.html</guid>
        
        
      </item>
    
      <item>
        <title>Flow Control in Node.js</title>
        <description>&lt;p&gt;Octobersky.js 세번째 오프모임에서 발표한 자료&lt;/p&gt;

&lt;!--
&lt;div style=&quot;width:510px&quot; id=&quot;__ss_12947355&quot;&gt; &lt;strong style=&quot;display:block;margin:12px 0 4px&quot;&gt;&lt;a href=&quot;http://www.slideshare.net/iamhjoo/flow-control-in-nodejs-12947355&quot; title=&quot;Flow control in node.js&quot; target=&quot;_blank&quot;&gt;Flow control in node.js&lt;/a&gt;&lt;/strong&gt; &lt;object id=&quot;__sse12947355&quot; width=&quot;510&quot; height=&quot;426&quot;&gt; &lt;param name=&quot;movie&quot; value=&quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=flowcontrolinnode-js-120515173359-phpapp02&amp;stripped_title=flow-control-in-nodejs-12947355&amp;userName=iamhjoo&quot; /&gt; &lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot;/&gt; &lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot;/&gt; &lt;param name=&quot;wmode&quot; value=&quot;transparent&quot;/&gt; &lt;embed name=&quot;__sse12947355&quot; src=&quot;http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=flowcontrolinnode-js-120515173359-phpapp02&amp;stripped_title=flow-control-in-nodejs-12947355&amp;userName=iamhjoo&quot; type=&quot;application/x-shockwave-flash&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; wmode=&quot;transparent&quot; width=&quot;510&quot; height=&quot;426&quot;&gt;&lt;/embed&gt; &lt;/object&gt; &lt;div style=&quot;padding:5px 0 12px&quot;&gt; View more &lt;a href=&quot;http://www.slideshare.net/&quot; target=&quot;_blank&quot;&gt;presentations&lt;/a&gt; from &lt;a href=&quot;http://www.slideshare.net/iamhjoo&quot; target=&quot;_blank&quot;&gt;iamhjoo (송형주)&lt;/a&gt; &lt;/div&gt; &lt;/div&gt;
--&gt;
&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/rYlEbzilFepHVO&quot; width=&quot;595&quot; height=&quot;485&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/iamhjoo/flow-control-in-nodejs-12947355&quot; title=&quot;Flow control in node.js&quot; target=&quot;_blank&quot;&gt;Flow control in node.js&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a target=&quot;_blank&quot; href=&quot;//www.slideshare.net/iamhjoo&quot;&gt;iamhjoo (송형주)&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;
</description>
        <pubDate>Wed, 16 May 2012 07:40:40 +0900</pubDate>
        <link>http://zzoon.github.io/insidejs/insidejs/2012/05/16/flow-control-in-node-js.html</link>
        <guid isPermaLink="true">http://zzoon.github.io/insidejs/insidejs/2012/05/16/flow-control-in-node-js.html</guid>
        
        
      </item>
    
      <item>
        <title>socket.io 를 활용한 실시간 survey 예제</title>
        <description>&lt;p&gt;socket.io를 활용한 예제를 한 번더 살펴보도록 하겠다.
이에 앞서 socket.io를 설명한 포스트와 예제 포스트를 한번 보시고 본문을 보시면 이해가 더 빠를 것이다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/insidejs/2011/12/18/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-8-socket-io.html&quot;&gt;8회 연재 – socket.io (웹소켓 통신)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/insidejs/2012/02/02/socket-io-eb-a5-bc-ed-99-9c-ec-9a-a9-ed-95-9c-ec-98-88-ec-a0-9c-eb-b6-84-ec-84-9d.html&quot;&gt;Socket.IO를 활용한 예제 분석&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;이번 예제는 실시간 인터넷 투표 예제를 만들어보려고 한다.&lt;/p&gt;

&lt;p&gt;다음 문서에서 같은 주제를 구현한 예제에 대한 설명이 있다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.netmagazine.com/tutorials/code-real-time-survey-html5-websockets&quot;&gt;http://www.netmagazine.com/tutorials/code-real-time-survey-html5-websockets&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;처음에는 위 문서를 바로 변역해보려고 했는데, 해당 문서에서는 서버는 WebSocket, 클라이언트는 ruby 를 이용하여 구현되어 있었다.
그래서, 그냥 결과물은 위 문서와 같게 하되, 서버는 socket.io, 클라이언트는 javascript를 이용하여 구현하기로 하였다.&lt;/p&gt;

&lt;p&gt;그리고 이 포스트에서 구현한 코드는 다음 github에 공개되어 있으니, 참고하기 바란다.
&lt;a href=&quot;https://github.com/zzoon/realtime-survey&quot;&gt;https://github.com/zzoon/realtime-survey&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;먼저 server code를 보자 - server.js&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;socket.io&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sockets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;connection&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;data-changed&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	  &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;changed&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;received&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;broadcast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;data-changed&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	  	&lt;span class=&quot;na&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;vote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vote&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;역시 socket.io를 쓰니 굉장히 간단히 구현이 된다. 사실 예제니까 그렇다.^^&lt;/p&gt;

&lt;p&gt;간단하게 설명하자면,&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sockets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;connection&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;클라이언트로 연결 요청이 오면, 연결하고 두번 째 인자인 anonymous function을 실행시킨다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;data-changed&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;서버가 리스닝을 하고 있다가, 클라이언트로부터 ‘data-changed’ 이벤트가 오면 두번 째 인자인 anonymous function을 실행시킨다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;boradcast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;data-changed&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;‘data-changed’ 이벤트를 두번째 인자인 object와 함께 broadcasting 한다. ( 연결되어 있는 모든 클라이언트에게 해당 이벤트를 전달한다. )
broadcasting 되는 object는 index, vote 를 가지는데, index는 클라이언트의 버튼 index이고, vote는 현재 해당 버튼에 대한 vote 값을 1을 더해 전달한다.
이에 대해서는 밑에 client 예제를 설명할 때 이해할 수 있을 것이다.&lt;/p&gt;

&lt;p&gt;위에서 보듯이 서버가 하는일은 딱 3가지다.
(물론 제대로 실시간 투표 시스템을 구현하려고 한다면, 이보다 훨씬 더 많은 일을 해야할 것이다.)&lt;/p&gt;

&lt;p&gt;client 예제를 보자.
참고로 클라이언트는 다음과 같은 화면이 나오도록 구현할 것이다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zzoon.github.io/insidejs/assets/Charting1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;[index.html]
(1) visualize jquery plugin : 그래프를 표현하기 위해, 여러가지 플러그인을 찾아보았는데, visualize 가 꽤 괜찮아 보여서, 채택했다. 더 마음에 드는 것이 있다면, 그것을 사용해보도록 하자.
참고로 visualize에 대한 자세한 사항은 &lt;a href=&quot;http://www.filamentgroup.com/lab/update_to_jquery_visualize_accessible_charts_with_html5_from_designing_with&quot;&gt;http://www.filamentgroup.com/lab/update_to_jquery_visualize_accessible_charts_with_html5_from_designing_with&lt;/a&gt;를 참고하도록 하자.&lt;/p&gt;

&lt;p&gt;(2) index.html
- table 태그 안의 구조는 visualize가 해석할 수 있도록 만들어야 한다. 이는 사용하는 플러그인마다 조금씩 다르므로, 주의하도록 하자.
- visualize로 표현된 그래프 밑에 사용자가 입력할 수 있는 버튼을 추가하였다. 각 버튼마다 id를 두었다. ( 이 id가 websocket을 통해 전달되는 index이다.)
- javascript code : 아래 주석을 살펴보자. 조금 길다…&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;   &lt;span class=&quot;c1&quot;&gt;// visualize 플러그인을 통해  html에 그대로 정의된 data를 바탕으로 그래프를 그린다.&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;example&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;visualize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;bar&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;420px&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;visualizeRefresh&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$opt_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$opt_vote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// 서버에 접속한다.&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;app_socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;http://zzoon.just4fun.co.kr:10706&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// 서버로부터 &#39;data-changed&#39; 이벤트를 받으면 다음 함수를 실행한다.&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 여기서는 vote값을 받아 해당 항목을 update하고 그래프를 refresh한다.&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;app_socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;data-changed&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;changed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;);&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;vote&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;nx&quot;&gt;$opt_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vote&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;$opt_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tr_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// visualize refresh&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;.visualize&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;visualizeRefresh&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// $opt_arr 은 각 항목의 데이타를 저장하는 배열이다.&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// 이 배열의 각 element는 index, vote, tr_item 을 가지는 object를 가리킨다.&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// index : click 이벤트가 발생한 버튼의 id를 나타내는 프로퍼티&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// vote : 해당 항목의 현재 vote 값을 나타내는 프로퍼티&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// tr_item : 해당 항목의 DOM object를 가리키는 프로퍼티&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;$opt_arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// table안의 tr 태그에 대한 DOM object을 찾는다.&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;$opt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;body&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;#example tbody tr&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// each 함수를 통해 각각의 TR item에 해당하는 DOM object를 찾아 여러가지 값을 얻어낸다.&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;$opt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// i 번째 TR item&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;$opt_item&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// i 번째 TR object에서 TD object를 찾아낸다.&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;$opt_find&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$opt_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;td&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// 해당 TH항목의 innerText값 ( 여기서는 각 여자연예인 이름이 된다 )&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;$opt_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$opt_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;th&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// 해당 TD항목의 innerText값 ( 여기서는 vote 값이 된다. )&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;$opt_vote&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$opt_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;td&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$opt_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;votes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$opt_vote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// $opt_arr 배열의 i번째에 위에서 찾아낸 값을 가지는 object를 가리키도록 한다.&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;$opt_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// index는 click된 버튼의 id와 같고, 동시에 $opt_arr 배열 안에서의 element index이기도 하다.&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;tr_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$opt_find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;// 여기서 tr_item은 DOM tree의 object를 직접 가리키고 있음을 명심하자.&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;vote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Number&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$opt_vote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Number 함수를 사용하였다.&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// 버튼의 click 이벤트 핸들러&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;click_handler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;// click된 버튼의 id와 해당 항목의 vote값을 얻어낸다.&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clicked_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vote_cnt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$opt_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clicked_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clicked_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clicked&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;);&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;vote&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vote_cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// &#39;data-changed&#39; 이벤트를 서버에 전송한다.&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;app_socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;data-changed&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clicked_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;vote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vote_cnt&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// 서버에 이벤트를 보낸후 현재 자신의 화면을 refresh 해야한다.&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;vote_cnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;$opt_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clicked_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;vote&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vote_cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;$opt_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clicked_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tr_item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vote_cnt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;c1&quot;&gt;// visualize refresh&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;.visualize&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;visualizeRefresh&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// 버튼의 clieck 이벤트에 대한 핸들러 등록&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;button&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click_handler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;여기까지가 이번 예제에 대한 설명이다.
여러가지 브라우저에서 클라이언트를 실행하고, 버튼을 클릭하면, 실시간으로 그래프가 바뀌는 것을 아래와 같이 볼 수 있을 것이다. ( 테스트 결과, firefox에서 제대로 동작하지 않음을 확인하였다. 그외, 크롬, IE9, 사파리에서는 정상동작을 확인하였다. 클라이언트에서 DOM에 관한 핸들링을 할 때, 문제가 있는 것으로 추측된다.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zzoon.github.io/insidejs/assets/Charting-1.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;결과가 궁금하신 분은 &lt;a href=&quot;http://zzoon.just4fun.co.kr/realtime-survey/&quot;&gt;http://zzoon.just4fun.co.kr/realtime-survey/&lt;/a&gt; 에 여러 브라우저를 통해 접속한 후, 테스트해 보시기 바란다.&lt;/p&gt;

&lt;p&gt;언제나 느끼지만, socket.io를 설명할 때, 클라이언트가 훨씬 코드가 길게 나온다. 이는 예제이기 때문에 서버의 코드가 굉장히 짧은 것이고, ( 서버가 해야할 수많은 일들을 생략 ) 클라이언트는 그래도 화면에 무엇인가를 그려줘야 하기때문에, 예제라고는 해도 생략할 수 없는 것들이 있다.&lt;/p&gt;

&lt;p&gt;위 예제에서는 단순한 web socket 통신 및 데이타를 받아서 클라이언트가 refresh하는 동작만을 보여주는데, 사실 심각한 문제가 있다.
초기 데이타값이 table 태그안에 그대로 정의되어 있는 것이다. 따라서, 어떤 클라이언트에서 아무리 김태희에 클릭질을 해도, 다른 클라이언트가 접속하면, 초기값이 그대로 나올 것이다.
이를 해결하려면 서버가 데이타베이스(아니면, 뭐든지)를 통해 vote 값을 관리해야 하고, 클라이언트는 초기화면에서 이 값을 서버로부터 내려받아 그려주어야 할 것이다.&lt;/p&gt;

&lt;p&gt;이에 대한 코드는 다음 포스트에서 설명하도록 하겠다.
(코딩할 시간이 필요하다.ㅡ.ㅡ;)&lt;/p&gt;
</description>
        <pubDate>Sun, 25 Mar 2012 22:15:38 +0900</pubDate>
        <link>http://zzoon.github.io/insidejs/insidejs/2012/03/25/socket-io-eb-a5-bc-ed-99-9c-ec-9a-a9-ed-95-9c-ec-8b-a4-ec-8b-9c-ea-b0-84-survey-ec-98-88-ec-a0-9c.html</link>
        <guid isPermaLink="true">http://zzoon.github.io/insidejs/insidejs/2012/03/25/socket-io-eb-a5-bc-ed-99-9c-ec-9a-a9-ed-95-9c-ec-8b-a4-ec-8b-9c-ea-b0-84-survey-ec-98-88-ec-a0-9c.html</guid>
        
        
      </item>
    
      <item>
        <title>Node.js에서 Async 모듈을 통한 중첩 콜백 문제 해결하기</title>
        <description>&lt;h1 id=&quot;post-670&quot; style=&quot;font-size: 28px; font-weight: bold; color: #5d6e00; letter-spacing: -1px; line-height: 27px; font-family: Arial, sans-serif; font-style: normal; font-variant: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: #ffffff; padding: 0px; margin: 0px;&quot;&gt;Node.js에서 Async 모듈을 통한 중첩 콜백 문제 해결하기&lt;/h1&gt;
&lt;div class=&quot;post-meta&quot; style=&quot;margin-top: 10px; margin-right: 0px; margin-bottom: 16px; margin-left: 0px; font-size: 12px; color: #5e4614; letter-spacing: normal; font-family: Arial, sans-serif; font-style: normal; font-variant: normal; font-weight: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: #ffffff; padding: 0px;&quot;&gt;&lt;em&gt;Posted on January 18th, 2012 under &lt;a style=&quot;color: #5d6e00; text-decoration: none;&quot; title=&quot;View all posts in Node.js&quot; rel=&quot;category tag&quot; href=&quot;http://www.hacksparrow.com/category/node-js-2&quot;&gt;Node.js&lt;/a&gt;&lt;/em&gt; &lt;em&gt;Tags: &lt;a style=&quot;color: #5d6e00; text-decoration: none;&quot; rel=&quot;tag&quot; href=&quot;http://www.hacksparrow.com/tag/async-js&quot;&gt;Async.js&lt;/a&gt;, &lt;a style=&quot;color: #5d6e00; text-decoration: none;&quot; rel=&quot;tag&quot; href=&quot;http://www.hacksparrow.com/tag/node-js&quot;&gt;node.js&lt;/a&gt;&lt;/em&gt;&lt;/div&gt;
&lt;p style=&quot;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; color: #000000; font-family: Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: #ffffff; margin: 0px;&quot;&gt;원문 링크 - &lt;a href=&quot;http://www.hacksparrow.com/managing-nested-asynchronous-callbacks-in-node-js.html&quot;&gt;http://www.hacksparrow.com/managing-nested-asynchronous-callbacks-in-node-js.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;관련글 - &lt;a href=&quot;/insidejs/2011/10/31/eb-b2-88-ec-97-ad-node-js-ec-97-90-ec-84-9c-eb-b9-84-eb-8f-99-ea-b8-b0-eb-a1-9c-ec-bd-94-eb-93-9c-eb-94-94-ec-9e-90-ec-9d-b8-ed-95-98-ea-b8-b0.html&quot;&gt;node.js에서 비동기로 코드 디자인 하기&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; color: #000000; font-family: Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: #ffffff; margin: 0px;&quot;&gt;Node.js를 가지고 작업해본 개발자라면 누구나 여러 단계로 중첩된 콜백 함수 처리에 대한 골치아픈 문제를 겪게 될 것이다.&lt;/p&gt;
&lt;p style=&quot;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; color: #000000; font-family: Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: #ffffff; margin: 0px;&quot;&gt;여러 겹의 중첩된 비동기 콜백 함수 문제는 최초 콜백 함수 내부에서 콜백 함수를 호출하고, 그 콜백 함수에서 다시 또다른 콜백 함수를 호출하고.. 이런 식으로 콜백 함수가 계속 중첩되는 상황에서 발생한다. 콜백 함수의 중첩 단계가 늘어날 수록 코드는 지저분해지고 결국엔 관리 불가의 상태가 될 수도 있다. 다음 예제를 살펴보자.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;fs&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;./async.txt&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// check if async.txt exists&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stats&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// read the contents of this file&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;// write the content to async.txt&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writeFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;async.txt created!&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p style=&quot;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; color: #000000; font-family: Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: #ffffff; margin: 0px;&quot;&gt;위 예제는 3단계의 중첩된 비동기 콜백 함수가 사용됐다. 여러분은 이것보다 훨씬 심한 콜백 함수의 중첩이 필요한 상황을 접할 수도 있을 것이다.&lt;/p&gt;
&lt;p style=&quot;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; color: #000000; font-family: Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: #ffffff; margin: 0px;&quot;&gt;한 가지 방법은 중첩될 콜백 함수를 외부에 정의하고, 콜백 함수에서 외부에 정의한 함수를 호출하는 것이다. 그러나 이 방법은 네임 스페이스를 복잡하게 하며 코드 또한 지저분하게 보인다.&lt;/p&gt;
&lt;p style=&quot;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; color: #000000; font-family: Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: #ffffff; margin: 0px;&quot;&gt;Node.js에서 중첩 콜백 문제를 처리하기 위한 다양한 비동기 제어 모듈들이 개발되고 있다. 내가 볼때 가장 유력한 모듈은 &lt;a style=&quot;color: #5d6e00; text-decoration: none;&quot; href=&quot;https://github.com/caolan/async&quot;&gt;Async&lt;/a&gt;와 &lt;a style=&quot;color: #5d6e00; text-decoration: none;&quot; href=&quot;https://github.com/creationix/step&quot;&gt;Step&lt;/a&gt;이다. 나는 Async를 선택했는 데, 그 이유는 확장성과 몇가지 특징들 때문이다. Asyn는 Step이 할 수 있는 일 뿐만 아니라, 더 많은 것을 할 수 있다. 우리가 Async를 이용해서 위 예제를 고쳐보자.&lt;/p&gt;
&lt;p style=&quot;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; color: #000000; font-family: Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: #ffffff; margin: 0px;&quot;&gt;우선 Async 모듈을 설치하자.&lt;/p&gt;
&lt;p style=&quot;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; color: #000000; font-family: Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: #ffffff; margin: 0px;&quot;&gt;그럼 다음, Async 모듈을 이용해서 위 소스 코드를 다시 작성하자.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;fs&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;async&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
 
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;./async.txt&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;waterfall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// check if async.txt exists&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stats&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stats&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;async.txt exists&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// read the contents of this file&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// write the content to async.txt&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;writeFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;async.txt created!&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p style=&quot;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; color: #000000; font-family: Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: #ffffff; margin: 0px;&quot;&gt;훨씬 더 보기 좋지 않은가? 실행 순서를 알아보기 쉬울 뿐 아니라, 콜백 함수가 중첩되지도 않는다. (가령, 10단계까지 중첩된 콜백 함수들의 코드를 상상해보자)&lt;/p&gt;
&lt;p style=&quot;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; color: #000000; font-family: Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: #ffffff; margin: 0px;&quot;&gt;Async는 위에서 살펴본 것 이외에 훨씬 많은 기능들을 가지고 있다. Async에 대한 정보를 알고 싶으면 &lt;a style=&quot;color: #5d6e00; text-decoration: none;&quot; href=&quot;https://github.com/caolan/async&quot;&gt;Async GitHub page&lt;/a&gt;를 참조하자.&lt;/p&gt;
&lt;p style=&quot;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; color: #000000; font-family: Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: #ffffff; margin: 0px;&quot;&gt;[역자주]&lt;/p&gt;
&lt;p style=&quot;padding-top: 0px; padding-right: 0px; padding-bottom: 15px; padding-left: 0px; color: #000000; font-family: Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: normal; letter-spacing: normal; line-height: normal; orphans: 2; text-align: -webkit-auto; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; background-color: #ffffff; margin: 0px;&quot;&gt;- Async는 Node.js 뿐만 아니라, 기존의 브라우저에서 동작하는 클라이언트 자바스크립트 코드에도 그대로 적용된다.&lt;br /&gt;- Async를 잘 사용하는 것도 중요하지만, 이를 어떻게 구현했는지를 코드를 통해 살펴보는 것도 많은 도움이 될 것이다.&lt;/p&gt;
</description>
        <pubDate>Sat, 18 Feb 2012 16:56:04 +0900</pubDate>
        <link>http://zzoon.github.io/insidejs/insidejs/2012/02/18/node-js-ec-97-90-ec-84-9c-async-eb-aa-a8-eb-93-88-ec-9d-84-ed-86-b5-ed-95-9c-ec-a4-91-ec-b2-a9-ec-bd-9c-eb-b0-b1-eb-ac-b8-ec-a0-9c-ed-95-b4-ea.html</link>
        <guid isPermaLink="true">http://zzoon.github.io/insidejs/insidejs/2012/02/18/node-js-ec-97-90-ec-84-9c-async-eb-aa-a8-eb-93-88-ec-9d-84-ed-86-b5-ed-95-9c-ec-a4-91-ec-b2-a9-ec-bd-9c-eb-b0-b1-eb-ac-b8-ec-a0-9c-ed-95-b4-ea.html</guid>
        
        
      </item>
    
      <item>
        <title>node.js 유용한 모듈 (15) - procstreams</title>
        <description>&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px&quot;&gt;원문 링크 -&lt;a href=&quot;http://www.catonmat.net/blog/nodejs-modules-procstreams/&quot;&gt;http://www.catonmat.net/blog/nodejs-modules-procstreams/&lt;br /&gt;&lt;/a&gt;본 게시글은 원저자의 허락을 얻어 번역한 것입니다.&lt;/p&gt;
&lt;!--
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px&quot;&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/609&quot;&gt;1회 연재 - dnode (RPC 라이브러리)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/625&quot;&gt;2회 연재 - optimist (옵션 파서)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/631&quot;&gt;3회 연재 - lazy (lazy 리스트 처리)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/634&quot;&gt;4회 연재 - request (HTTP 스트림 처리)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/638&quot;&gt;5회 연재 - hashish (해시 처리)&lt;br /&gt;&lt;/a&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/653&quot;&gt;6회 연재 - read (쉬운 표준 입력 처리)&lt;br /&gt;&lt;/a&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/661&quot;&gt;7회 연재 - ntwitter (트위터 API)&lt;br /&gt;&lt;/a&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/704&quot;&gt;8회 연재 - socket.io (웹소켓 통신)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/719&quot;&gt;9회 연재 - redis (redis 클라이언트 라이브러리)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/745&quot;&gt;10회 연재 - express (경량의 고속 웹 프레임워크)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/754&quot;&gt;11회 연재 - semvar (버전 넘버링 처리)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/757&quot;&gt;12회 연재 - cradle (고수준 CouchDB 클라이언트)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/760&quot;&gt;13회 연재 - JSONStream (스트리밍 JSON 파서)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/811&quot;&gt;14회 연재 - everyauth (페이스북, 트위터 등의 서비스 인증) &lt;/a&gt;&lt;/p&gt;
--&gt;
&lt;p&gt;&lt;a href=&quot;/insidejs/2011/12/09/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-1-dnode.html&quot;&gt;1회 연재 - dnode (RPC 라이브러리)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/insidejs/2011/12/10/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-2-optimist.html&quot;&gt;2회 연재 - optimist (옵션 파서)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/insidejs/2011/12/13/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-3-lazy.html&quot;&gt;3회 연재 - lazy (lazy 리스트 처리)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/insidejs/2011/12/13/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-4-request.html&quot;&gt;4회 연재 - request (HTTP 스트림 처리)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/insidejs/2011/12/14/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-5-hashish.html&quot;&gt;5회 연재 - hashish (해시 처리)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/insidejs/2011/12/15/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-6-read.html&quot;&gt;6회 연재 - read (쉬운 표준 입력 처리)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/insidejs/2011/12/16/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-7-ntwitter.html&quot;&gt;7회 연재 - ntwitter (트위터 API)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/insidejs/2011/12/18/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-8-socket-io.html&quot;&gt;8회 연재 - socket.io (웹소켓 통신)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/insidejs/2011/12/18/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-9-redis.html&quot;&gt;9회 연재 - redis (redis 클라이언트 라이브러리)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/insidejs/2011/12/20/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-10-express.html&quot;&gt;10회 연재 - express (경량의 고속 웹 프레임워크)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/insidejs/2011/12/22/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-11-semvar.html&quot;&gt;11회 연재 - semvar (버전 넘버링 처리)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/insidejs/2011/12/27/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-12-cradle.html&quot;&gt;12회 연재 - cradle (고수준 CouchDB 클라이언트)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/insidejs/2011/12/27/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-13-jsonstream.html&quot;&gt;13회 연재 - JSONStream (스트리밍 JSON 파서)&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/insidejs/2012/01/05/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-14-everyauth.html&quot;&gt;14회 연재 - everyauth (페이스북, 트위터 등의 서비스 인증)&lt;/a&gt;&lt;/p&gt;

&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;오늘 소개할 모듈은 &lt;a href=&quot;https://twitter.com/#!/polotek&quot;&gt;polotek&lt;/a&gt;이라는 닉네임으로 알려진 &lt;a href=&quot;http://marcorogers.com/blog/&quot;&gt;Marco Rogers&lt;/a&gt;가 만든 &lt;a href=&quot;https://github.com/polotek/procstreams&quot;&gt;procstreams&lt;/a&gt; 모듈이다. procstreams는 node에서 쉘 스크립팅을 실행하는 아직 실험 단계의 모듈이다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;
&lt;pre style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;line-height: 1.3em;padding: 1em;margin: 1em;border: 1px solid #cccccc&quot;&gt;&lt;span class=&quot;kd&quot; style=&quot;font-weight: bold;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #008800;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;$p&lt;/span&gt; &lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;procstreams&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;$p&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;cat lines.txt&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;pipe&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;wc -l&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot; style=&quot;font-weight: bold;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #008800;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #888888;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;// prints number of lines in the file lines.txt&lt;/span&gt;
  &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;});&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;위 예제는 &lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;cat lines.txt&lt;/code&gt; 쉘 명령어를 실행한 다음, 결과값을 &lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;wc -l&lt;/code&gt; 명령의 입력으로 전달(pipe) 한다. 그런 다음 콜백 함수를 통해  &lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;lines.txt&lt;/code&gt; 파일의 라인 수를 출력하게 된다.&lt;/p&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;다음은 또 다른 예제이다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;
&lt;pre style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;line-height: 1.3em;padding: 1em;margin: 1em;border: 1px solid #cccccc&quot;&gt;&lt;span class=&quot;kd&quot; style=&quot;font-weight: bold;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #008800;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;$p&lt;/span&gt; &lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;procstreams&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;$p&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;mkdir foo&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;cp file.txt foo/&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;and&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;rm file.txt&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;exit&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot; style=&quot;font-weight: bold;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #008800;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;done&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;});&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;위 예제는 &lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;mkdir foo&lt;/code&gt; 을 실행하고, 이 명령이 성공하면 &lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;cp file.txt foo/&lt;/code&gt; 명령을 실행한다. 이 명령이 계속 성공했다면, &lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;rm file.txt&lt;/code&gt; 명령을 계속 수행한다. 위 코드를 쉘 스크립트로 작성하면 다음과 같을 것이다.&lt;/p&gt;
&lt;pre style=&quot;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #ffffff;line-height: 1.3em;color: #222222;font-variant: normal;letter-spacing: normal;text-align: -webkit-auto;text-indent: 0px;padding: 1em;margin: 1em;border: 1px solid #cccccc&quot;&gt;mkdir foo &amp;amp;&amp;amp; cp file.txt foo/ &amp;amp;&amp;amp; rm file.txt&lt;/pre&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;&lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;.and(…)&lt;/code&gt; 함수는 쉘 스크립트에서 &lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt; 와 같다.&lt;/p&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;procstreams는 또한 쉘 스크립트 명령에서 &lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;||&lt;/code&gt;와 유사한 &lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;.or(...)&lt;/code&gt; 메서드와 &lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;;&lt;/code&gt;와 유사한 &lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;.then(...)&lt;/code&gt;메서드를 지원한다.&lt;/p&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;다음은 예제 코드이다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;
&lt;pre style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;line-height: 1.3em;padding: 1em;margin: 1em;border: 1px solid #cccccc&quot;&gt;&lt;span class=&quot;kd&quot; style=&quot;font-weight: bold;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #008800;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;$p&lt;/span&gt; &lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;procstreams&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;$p&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;mkdir foo&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;cp file.txt file2.txt&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;echo &quot;failed&quot; &amp;gt; ~/notify&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;)&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;이 예제는 &lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;mkdirs foo&lt;/code&gt; 명령을 수행한 다음, file.txt를 file2.txt로 복사한다. 만약 복사가 실패할 경우 &quot;failed&quot; 에러를 &lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;~/notify&lt;/code&gt; 파일에 쓴다. 쉘 스크립트로 작성하면 다음과 같을 것이다.&lt;/p&gt;
&lt;pre style=&quot;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #ffffff;line-height: 1.3em;color: #222222;font-variant: normal;letter-spacing: normal;text-align: -webkit-auto;text-indent: 0px;padding: 1em;margin: 1em;border: 1px solid #cccccc&quot;&gt;mkdir foo; cp file.txt file2.txt || echo &quot;failed&quot; &amp;gt; ~/notify&lt;/pre&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;procstreams의 전체 기능을 알고 싶다면 Github 사이트상의 &lt;a href=&quot;https://github.com/polotek/procstreams&quot;&gt;procstreams documentation&lt;/a&gt;을 살펴봐라.&lt;/p&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;다음과 같이 npm을 통해 &lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;procstreams&lt;/code&gt; 를 설치할 수 있다.&lt;/p&gt;
&lt;pre style=&quot;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #ffffff;line-height: 1.3em;color: #222222;font-variant: normal;letter-spacing: normal;text-align: -webkit-auto;text-indent: 0px;padding: 1em;margin: 1em;border: 1px solid #cccccc&quot;&gt;npm install procstreams
&lt;/pre&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;Procstreams의 GitHub 사이트 : &lt;a href=&quot;https://github.com/polotek/procstreams&quot;&gt;https://github.com/polotek/procstreams&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Feb 2012 23:22:09 +0900</pubDate>
        <link>http://zzoon.github.io/insidejs/insidejs/2012/02/05/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-15-procstreams.html</link>
        <guid isPermaLink="true">http://zzoon.github.io/insidejs/insidejs/2012/02/05/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-15-procstreams.html</guid>
        
        
      </item>
    
      <item>
        <title>Socket.IO를 활용한 예제 분석</title>
        <description>&lt;p&gt;socket.io를 활용한 재미있는 예제를 찾던 중, 다음을 발견하였다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://wesbos.com/html5-canvas-websockets-nodejs/&quot;&gt;http://wesbos.com/html5-canvas-websockets-nodejs/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;이 예제는 각 클라이언트가 socket.io 서버에 접속을 하고, 한 명의 클라이언트가 자신의 브라우저에 그림을 그리면, 다른 클라이언트의 브라우저에도 실시간으로 똑같이 그림이 그려지도록 하는 예제이다. 원문을 클릭하면, 해당 예제를 돌리는 동영상을 볼 수 있다.&lt;/p&gt;

&lt;p&gt;본 글에서는 이 페이지에서 소개하는 예제를 분석해 보도록 하겠다.
( 원문에는 coffee script를 활용하였으나, 역자는 컴파일을 통해 생성되는 javascript 코드를 가지고 분석하도록 하겠다.)&lt;/p&gt;

&lt;p&gt;원문의 소스가 있는 github 주소는 다음과 같다.
&lt;a href=&quot;https://github.com/wesbos/websocket-canvas-draw&quot;&gt;https://github.com/wesbos/websocket-canvas-draw&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;본문으로 들어가기에 앞서, socket.io에 대한 지식을 먼저 갖추도록 하자.
공식 사이트는 &lt;a href=&quot;http://socket.io&quot;&gt;http://socket.io&lt;/a&gt; 이다.
본 블로그에서는 &lt;a href=&quot;/insidejs/2011/12/18/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-8-socket-io.html&quot;&gt;8회 연재 – socket.io (웹소켓 통신)&lt;/a&gt; 에서 socket.io에 대하여 간단히 소개한 글을 번역한 글이 있고, 한글 문서 중에서는 Web Socket과 함께 자세한 설명이 있는 문서를 다음 주소에서 찾을 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://helloworld.naver.com/helloworld/1336&quot;&gt;http://helloworld.naver.com/helloworld/1336&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;자, 이제 본격적으로 서버 코드를 보자.&lt;/p&gt;
&lt;h3&gt;&lt;span style=&quot;color: #000000;&quot;&gt;&lt;strong&gt;[server.js]&lt;/strong&gt;&lt;/span&gt;&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;socket.io&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sockets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;connection&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;drawClick&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;broadcast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;draw&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;전형적인 socket.io의 예제코드다.&lt;/p&gt;

&lt;p&gt;‘connection’ 이벤트가 발생하면, 즉, 연결이 이루어지면, 해당 소켓에서 ‘drawClick’ 이벤트를 리스닝하게 된다.
그리고 ‘drawClick’ 이벤트가 발생하면, { x, y, type } 객체와 함께 ‘draw’ 이벤트를 연결되어 있는 모든 클라이언트에게 브로드캐스팅 하게 된다. 여기서 x와 y는 브라우저의 캔버스의 좌표이고, type은 이벤트 타입( dragstart, drag, dragend, 아래 설명됨 )이다.&lt;/p&gt;

&lt;p&gt;서버는 위가 전부다. 그렇다면, 클라이언트는 어떻게 되어 있을까?&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;[ index.html ]&lt;/strong&gt;&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE HTML&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://ajax.googleapis.com/ajax/libs/jquery/1.6.2/jquery.min.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;js/jquery.event.drag-2.0.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://localhost:4000/socket.io/socket.io.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;scripts.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;style.css&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;HTML5 Canvas + Node.JS Socket.io&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;article&amp;gt;&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- our canvas will be inserted here--&amp;gt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;여기서 클라이언트는 다음의 javascript를 로딩한다.
- jquery
- jquery.event.drag-2.0.js
- socket.io 서버의 socket.io.js
- scripts.js&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;[ jquery.event.drag-2.0.js ]&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;이 코드는 다양한 웹브라우저의 여러가지 마우스 이벤트 중에서 drag에 대한 처리를 dragstart, drag, dragend 라는 이벤트로 편하게 통일된 방식으로 처리할 수 있도록 만든 jquery plugin 소스이다. ( 이 플러그인 없이, 브라우저의 이벤트를 통해 드래그에 대한 이벤트 핸들링을 하려한다면, 각 브라우저별로 이벤트 핸들링 코드를 구현해야 할 것이다.) 이 소스코드에 대한 설명은 다음 기회에 하도록 하겠다. ( 사실 웹 관련 지식이 부족한 편이라 ( 특히 browser-specific한 부분) 아직 분석할 능력이 안된다 )&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;[socket.io.js]&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;클라이언트에서 sokcet.io 를 사용하기 위해 로딩한다.&lt;/p&gt;
&lt;h2&gt;&lt;strong&gt;[scripts.js]&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;이 소스에서 하는 일은 다음과 같다.
&lt;strong&gt;(1) canvas를 만들어 그림을 그릴 준비를 한다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;(1)의 소스는 다음과 같다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;canvas&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;800&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;article&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2d&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fillStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;solid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;strokeStyle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#bada55&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineCap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;round&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;...........................&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;createElement를 통해 DOM element(canvas)를 만들고 특성(width, height)을 정한다.&lt;/li&gt;
  &lt;li&gt;article이라는 DOM Element의 자식으로 canvas를 붙인다. ( 여기서 article은 위 index.html에서 기술된 그 article태그를 말한다.)&lt;/li&gt;
  &lt;li&gt;getContext(“2d”) 를 통해 canvas의 context를 얻어온다. 이 context를 통해 그림을 (정확히는 선을) 그릴 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;(2) dragstart, drag, dragend 이벤트가 발생하면 해당 좌표를 담아서 drawClick 이벤트를 socket.io 서버로 보낸다.&lt;/strong&gt; (2)의 소스는 다음과 같다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;canvas&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;live&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;drag dragstart dragend&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;handleObj&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;offset&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layerX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;layerY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;drawClick&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;live 함수는 jquery 함수로서 특정 이벤트에 대한 핸들러를 정의할 때 쓰인다. ( 이 함수는 현재 deprecated 되었다. 현재는 on()을 쓴다. )&lt;/li&gt;
  &lt;li&gt;live 함수를 통해 drag, dragstart, dragend 이벤트에 대한 핸들러를 정의하였다. 여기서 drag, dragstart, dragend는 위에서 설명했듯이, jquery.event.drag-2.0.js 에서 발생시킨다.&lt;/li&gt;
  &lt;li&gt;핸들러를 보면, x, y좌표를 계산하고, Draw() 한후, socket.io 서버에 이 좌표와 현재 이벤트의 타입을 담아, ‘drawClick’이벤트를 보낸다.&lt;/li&gt;
  &lt;li&gt;위의 서버 코드에서 설명했듯이, 서버는 클라이언트로부터 drawClick 이벤트를 받으면, {x,y, type}을 담아 모든 클라이언트에 draw 이벤트를 보낸다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;(3) 서버로부터 draw 이벤트를 받으면 해당 좌표에 그림을 그린다.&lt;/strong&gt;
(3)의 소스는 다음과 같다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;init&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;............................&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;http://localhost:4000&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;draw&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dragstart&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;beginPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;moveTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drag&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;quot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lineTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stroke&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;App&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;closePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;socket.on 을 통해 ‘draw’ 이벤트를 리스닝하고 해당 이벤트가 발생하면 그림을 그린다.&lt;/li&gt;
  &lt;li&gt;App.draw()는 그림(선)을 그리는 함수이다.&lt;/li&gt;
  &lt;li&gt;beginPath, moveTo, lineTo, stroke, closePath 함수에 대한 설명은 생략하겠다. canvas에 대한 자세한 사항은 &lt;a href=&quot;https://developer.mozilla.org/en/Drawing_Graphics_with_Canvas&quot;&gt;https://developer.mozilla.org/en/Drawing_Graphics_with_Canvas&lt;/a&gt; 에 설명되어 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이렇게 해서 간단하게 한 클라이언트가 그림을 그리면 다른 클라이언트의 브라우저에서도 똑같이 그림이 그려지는 재미난 예제 코드에 대해 분석해 보았다.&lt;/p&gt;

&lt;p&gt;이 예제를 통해 socket.io를 통해 무엇을 만들 수 있을지 감을 잡을 수 있을 것이라 생각한다.&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Feb 2012 23:15:38 +0900</pubDate>
        <link>http://zzoon.github.io/insidejs/insidejs/2012/02/02/socket-io-eb-a5-bc-ed-99-9c-ec-9a-a9-ed-95-9c-ec-98-88-ec-a0-9c-eb-b6-84-ec-84-9d.html</link>
        <guid isPermaLink="true">http://zzoon.github.io/insidejs/insidejs/2012/02/02/socket-io-eb-a5-bc-ed-99-9c-ec-9a-a9-ed-95-9c-ec-98-88-ec-a0-9c-eb-b6-84-ec-84-9d.html</guid>
        
        
      </item>
    
      <item>
        <title>Node.js 도움말 번역 - C/C++ Add-on  작성 관련</title>
        <description>&lt;p&gt;Node.js  C/C++ Add-on에 관심이 있어서, 가장 기본적인 Node.js 도움말에 관련 내용을 번역해 봤습니다. 이를 토대로 좀더 구체적인 바이너리 모듈 작성 방법에 대해서 정리되는대로 올리겠습니다.&lt;/p&gt;
&lt;ul&gt;관련 자료
&lt;li&gt;&lt;a href=&quot;http://code.google.com/apis/v8/embed.html&quot; title=&quot;V8 Embedder&#39;s guide&quot; target=&quot;_blank&quot;&gt;V8 Embedder&#39;s guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Addons&lt;/h1&gt;
&lt;p&gt;Add-on은 동적으로 링크되는 공유 오브젝트입니다. (역자주-C언어에서의 .so 라이브러리라고 생각하면 됩니다.) 그것은 기존의 C/C++ 라이브러리를 사용하기 위한 진입점 역할을 할 수 있습니다. Add-on을 만들기 위한 API는 다음과 같은 몇개의 라이브러리를 포함한 지식들을 필요로 합니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;V8 자바스크립트 엔진 (C++ 라이브러리). 자바스크립트 코드와의 인터페이스를 처리하는데 사용 : 객체 생성, 함수 호출 등. &lt;strong&gt;v8.h&lt;/strong&gt;헤더 파일 (Node.js 소스 트리 &lt;strong&gt;deps/v8/include/v8.h&lt;/strong&gt;) 에 필요한 내용이 문서화되어 있습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/joyent/libuv&quot;&gt;libuv&lt;/a&gt; (C 기반 이벤트 루프 라이브러리). 파일 디스크립터가 읽기 가능할 때나, 타이머가 만료될 때, 또는 무언가 수신됐다는 시그널을 기다리는 경우에 libuv를 사용할 수 있습니다. 만약 여러분이 어떤 I/O(입출력)을 수행하던지 libuv를 이용할 수 있습니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Node 내부 라이브러리. &lt;strong&gt;node::ObjectWrap&lt;/strong&gt;클래스가 가장 중요합니다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;기타 라이브러리. &lt;strong&gt;deps/&lt;/strong&gt; 디렉토리 내부를 살펴보세요.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Node는 그것의 모든 의존성을 가진 모듈들을 정적으로 컴파일해서 실행 파일을 생성합니다. 따라서 여러분이 모듈을 컴파일 할때 어떤 라이브러리들을 링크해야 하는 지 걱정할 필요가 없습니다.&lt;/p&gt;
&lt;p&gt;다음과 같은 자바스크립트 코드와 동일한 기능의 간단한 C++ Add-on을 만드는 것을 시작할 것입니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;world&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;우선 다음과 같이 hello.cc 파일을 생성하세요.&lt;br /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;node.h&amp;gt;
#include &amp;lt;v8.h&amp;gt;
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Handle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Arguments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;HandleScope&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;world&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Handle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;NODE_SET_METHOD&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;hello&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Method&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;NODE_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;모든 Node Add-on들은 초기화 함수를 익스포트 해야한다는 것을 기억하세요.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-cpp&quot; data-lang=&quot;cpp&quot;&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Initialize&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Handle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;NODE_MODULE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;NODE_MODULE은 함수가 아니기 때문에 문장 끝에 세미콜론(;)이 없습니다. (node.h 파일을 살펴보세요)&lt;/p&gt;
&lt;p&gt;module_name은 최종 바이너리의 파일명과 일치하게 합니다. (.node 확장자명을 제거)&lt;/p&gt;
&lt;p&gt;위 소스 코드는 바이너리 Add-on인 hello.node 파일로 빌드되야 합니다. 이를 위해서 다음과 같은 파이썬 기반의 빌드 스크립트 파일인 wscript 파일을 작성해야 합니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;n&quot;&gt;srcdir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;.&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;blddir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;build&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;0.0.1&#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;opt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;opt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tool_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;compiler_cxx&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;check_tool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;compiler_cxx&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;check_tool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;node_addon&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bld&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_task_gen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;cxx&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;shlib&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;node_addon&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;hello&#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;obj&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;hello.cc&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;node-waf configure build 명령을 통해 위 스크립트를 쉘 상에서 실행하면, 여러분이 작성한 build/default/hello.node Add-on 파일이 생성됩니다.&lt;/p&gt;
&lt;p&gt;node-waf는 파이썬 기반의 빌드 시스템인 &lt;a href=&quot;http://code.google.com/p/waf&quot;&gt;WAF&lt;/a&gt;와 동일합니다. node-waf는 쉽게 모듈을 빌드할 수 있게 하기 위해 제공하고 있습니다.&lt;/p&gt;
&lt;p&gt;여러분은 아래와 같이 hello.js라는 Node 프로젝트를 만들고, 이 파일을 통해 바이너리 Add-on을 바로 사용할 수 있습니다. 작성된 모듈을 사용하기 위해서는 require문을 통해 사용할 모듈을 지정하면 됩니다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;addon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;./build/Release/hello&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// &#39;world&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;좀더 자세한 개발 예제를 보고 싶다면 &lt;a href=&quot;https://github.com/pietern/hiredis-node&quot;&gt;https://github.com/pietern/hiredis-node&lt;/a&gt; 를 참조하세요.&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Jan 2012 23:41:21 +0900</pubDate>
        <link>http://zzoon.github.io/insidejs/insidejs/2012/01/17/node-js-eb-8f-84-ec-9b-80-eb-a7-90-eb-b2-88-ec-97-ad-cc-add-on-ec-9e-91-ec-84-b1-ea-b4-80-eb-a0-a8.html</link>
        <guid isPermaLink="true">http://zzoon.github.io/insidejs/insidejs/2012/01/17/node-js-eb-8f-84-ec-9b-80-eb-a7-90-eb-b2-88-ec-97-ad-cc-add-on-ec-9e-91-ec-84-b1-ea-b4-80-eb-a0-a8.html</guid>
        
        
      </item>
    
      <item>
        <title>Node.js를 이용한 웹 기반 메모장 구현하기  - Nodepad 프로젝트 소개</title>
        <description>&lt;p&gt;요즘 Node.js 공부를 어떻게 해야하는지에 대한 질문을 종종 받습니다. &lt;br /&gt;사실 저도 배워가는 처지라 정확한 답변 보다는 다음과 같은 원론적인 얘기만을 늘어놓고 있습니다.&lt;/p&gt;
&lt;p&gt;&quot;Node.js를 설치하고, 우선 API 공부를 충실히 한 다음 관련 프로그램을 작성해보세요.&quot;&lt;/p&gt;
&lt;p&gt;그런데 저같은 초보자에 입장에서는 API 공부까지는 스스로 할 수 있다 치더라도 무엇을 만들지에 대한 고민을 해결하기는 쉽지가 않습니다.&lt;/p&gt;
&lt;p&gt;이에 대한 하나의 대안으로 Node.js를 활용한 웹 기반의 메모장 &#39;nodepad&#39;라는 프로젝트를 소개하려고 합니다.&lt;/p&gt;
&lt;p&gt;제가 즐겨 찾는 자바스크립트 관련 블로그 중에 &#39;DailyJS(&lt;a href=&quot;http://dailyjs.com/&quot;&gt;http://dailyjs.com/&lt;/a&gt;)&#39;라는 곳이 있습니다. 이곳은 각종 자바스크립트 관련 라이브러리나 프레임워크의 리뷰 관련 글, 그리고 node.js 글들이 매주 2~3회씩 포스팅 되는 아주 액티브한 블로그입니다.&lt;/p&gt;
&lt;p&gt;이곳의 주인장 Allex Young이라는 친구가 Nodepad 라는 Node.js 기반의 튜터리얼 연재를 약 20회에 걸쳐서 진행했습니다. &lt;br /&gt;&lt;a href=&quot;http://dailyjs.com/2010/11/01/node-tutorial/&quot;&gt;여기를 참조하세요. &lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://zzoon.github.io/insidejs/assets/NewImage.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;이 프로젝트에 대해 간단히 소개하면, Node.js의 웹서비스 프레임워크인 Express와 MongoDB를 핸들링할 수 있는 Mongoose 등과 같은 Node 모듈들을 활용해서 웹 기반의 메모장을 만드는 것입니다. 튜터리얼은 Nodepad의 기능을 하나씩 추가하는 방식으로 연재를 진행하고 있습니다. 그리고 해당 회차의 전체 소스들은 Github 사이트에서 공개하고 있습니다. 하지만 해당 회차의 모든 소스들에 대한 설명을 하지는 않기 때문에 튜터리얼과 소스를 같이 살펴봐야 합니다.&lt;/p&gt;

&lt;p&gt;아마 Node.js 개발 방법에 대한 전체 사이클이 궁금하신 분들이라면, 차근차근 수행한다면 Node.js에 대한 활용 방법에 대해서도 많은 도움을 얻을 수 있을 것입니다.
그리고 제가 참여하고 있는 &lt;a href=&quot;http://www.facebook.com/octoberskyjs&quot;&gt;Octobersky.js 스터디&lt;/a&gt;의 일환으로 Nodepad 프로젝트의 번역을 진행하고 있으니, &lt;a href=&quot;http://blog.doortts.com/category/node.js%20%EB%94%B0%EB%9D%BC%EB%B0%B0%EC%9A%B0%EA%B8%B0&quot;&gt;이곳&lt;/a&gt;를 참고하셔도 괜찮습니다.&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Jan 2012 19:00:54 +0900</pubDate>
        <link>http://zzoon.github.io/insidejs/insidejs/2012/01/14/node-js-eb-a5-bc-ec-9d-b4-ec-9a-a9-ed-95-9c-ec-9b-b9-ea-b8-b0-eb-b0-98-eb-a9-94-eb-aa-a8-ec-9e-a5-ea-b5-ac-ed-98-84-ed-95-98-ea-b8-b0-nodepad-e.html</link>
        <guid isPermaLink="true">http://zzoon.github.io/insidejs/insidejs/2012/01/14/node-js-eb-a5-bc-ec-9d-b4-ec-9a-a9-ed-95-9c-ec-9b-b9-ea-b8-b0-eb-b0-98-eb-a9-94-eb-aa-a8-ec-9e-a5-ea-b5-ac-ed-98-84-ed-95-98-ea-b8-b0-nodepad-e.html</guid>
        
        
      </item>
    
      <item>
        <title>node.js 유용한 모듈 (14) - everyauth</title>
        <description>&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px&quot;&gt;원문 링크 - &lt;a href=&quot;http://www.catonmat.net/blog/nodejs-modules-everyauth/&quot;&gt;http://www.catonmat.net/blog/nodejs-modules-everyauth/&lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px&quot;&gt;&lt;a href=&quot;http://www.catonmat.net/blog/nodejs-modules-everyauth/&quot;&gt;&lt;/a&gt;본 게시글은 원저자의 허락을 얻어 번역한 것입니다.&lt;/p&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px&quot;&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/609&quot;&gt;1회 연재 - dnode (RPC 라이브러리)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/625&quot;&gt;2회 연재 - optimist (옵션 파서)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/631&quot;&gt;3회 연재 - lazy (lazy 리스트 처리)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/634&quot;&gt;4회 연재 - request (HTTP 스트림 처리)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/638&quot;&gt;5회 연재 - hashish (해시 처리)&lt;br /&gt;&lt;/a&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/653&quot;&gt;6회 연재 - read (쉬운 표준 입력 처리)&lt;br /&gt;&lt;/a&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/661&quot;&gt;7회 연재 - ntwitter (트위터 API)&lt;br /&gt;&lt;/a&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/704&quot;&gt;8회 연재 - socket.io (웹소켓 통신)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/719&quot;&gt;9회 연재 - redis (redis 클라이언트 라이브러리)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/745&quot;&gt;10회 연재 - express (경량의 고속 웹 프레임워크)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/754&quot;&gt;11회 연재 - semvar (버전 넘버링 처리)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/757&quot;&gt;12회 연재 - cradle (고수준 CouchDB 클라이언트)&lt;/a&gt; &lt;br /&gt;&lt;a href=&quot;http://nodejs-kr.org/insidejs/archives/760&quot;&gt;13회 연재 - JSONStream (스트리밍 JSON 파서) &lt;/a&gt;&lt;/p&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;오늘 소개할 모듈은 &lt;a href=&quot;https://github.com/bnoguchi&quot;&gt;Brian Noguchi&lt;/a&gt;가 만든 &lt;a href=&quot;https://github.com/bnoguchi/everyauth&quot;&gt;everyauth&lt;/a&gt;다. everyauth는 &lt;a href=&quot;http://senchalabs.github.com/connect/&quot;&gt;connect&lt;/a&gt; 모듈의 미들웨어로 사용되며 페이스북, 트위터, 구글 등과 같은 서비스의 인증을 처리하기 위하 사용된다.&lt;/p&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;다음은 이 모듈을 통해 로그인 처리를 할 수 있는 사이트 목록이다.&lt;/p&gt;
&lt;div class=&quot;c&quot; style=&quot;padding-top: 0px;padding-right: 0px;padding-bottom: 1em;padding-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;text-align: center;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-indent: 0px;background-color: #ffffff;margin: 0px;border: 0px initial initial&quot;&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;border: 0px initial initial&quot;&gt;&lt;img style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot; src=&quot;http://www.catonmat.net/images/nodejs-modules/everyauth.png&quot; alt=&quot;&quot; /&gt;&lt;br /&gt;Everyauth supports a plenty of sites.&lt;/p&gt;
&lt;/div&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;모듈을 사용하기 위해서는 다음과 같이 connect에서의 미들웨어 설정을 한다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;
&lt;pre style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;line-height: 1.3em;padding: 1em;margin: 1em;border: 1px solid #cccccc&quot;&gt;&lt;span class=&quot;kd&quot; style=&quot;font-weight: bold;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #008800;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;everyauth&lt;/span&gt; &lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;everyauth&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot; style=&quot;font-weight: bold;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #008800;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;connect&lt;/span&gt; &lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;connect&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot; style=&quot;font-weight: bold;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #008800;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;everyauth&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;middleware&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;());&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;그리고 인증 처리를 할 서비스들의 비밀키를 다음과 같이 &lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;config.json&lt;/code&gt;에 구성한다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;
&lt;pre style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;line-height: 1.3em;padding: 1em;margin: 1em;border: 1px solid #cccccc&quot;&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;fb&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;appId&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;111565172259433&#39;&lt;/span&gt;
      &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;appSecret&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;85f7e0a0cc804886180b887c1f04a3c1&#39;&lt;/span&gt;
    &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;twit&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;consumerKey&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;JLCGyLzuOK1BjnKPKGyQ&#39;&lt;/span&gt;
      &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;consumerSecret&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;GNqKfPqtzOcsCtFbGTMqinoATHvBcy1nzCTimeA9M0&#39;&lt;/span&gt;
    &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;github&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;appId&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;11932f2b6d05d2a5fa18&#39;&lt;/span&gt;
      &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;appSecret&lt;/span&gt;&lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;2603d1bc663b74d6732500c1e9ad05b0f4013593&#39;&lt;/span&gt;
    &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;},&lt;/span&gt;
    &lt;span class=&quot;c1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #888888;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;};&lt;/span&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;그런 다음 여러분이 사용하려는 서비스의 로그인을 수행하는 코드를 작성한다. (아래 코드는 페이스북 로그인 예제다)&lt;/p&gt;
&lt;div class=&quot;highlight&quot; style=&quot;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;
&lt;pre style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;line-height: 1.3em;padding: 1em;margin: 1em;border: 1px solid #cccccc&quot;&gt;&lt;span class=&quot;kd&quot; style=&quot;font-weight: bold;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #008800;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;conf&lt;/span&gt; &lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;./config.json&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot; style=&quot;font-weight: bold;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #008800;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;usersByFbId&lt;/span&gt; &lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;{};&lt;/span&gt;

&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;everyauth&lt;/span&gt;
  &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;facebook&lt;/span&gt;
    &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;appId&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;fb&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;appId&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;appSecret&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;conf&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;fb&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;appSecret&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;findOrCreateUser&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot; style=&quot;font-weight: bold;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #008800;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;accessToken&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;accessTokenExtra&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;fbUserMetadata&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot; style=&quot;font-weight: bold;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #008800;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;usersByFbId&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;fbUserMetadata&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;||&lt;/span&gt;
        &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;usersByFbId&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;fbUserMetadata&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;addUser&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;facebook&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;fbUserMetadata&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;));&lt;/span&gt;
    &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;redirectPath&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;color: #dd2200;background-color: #fff0f0;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;&#39;/&#39;&lt;/span&gt;&lt;span class=&quot;p&quot; style=&quot;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: inherit;vertical-align: baseline;padding: 0px;margin: 0px;border: 0px initial initial&quot;&gt;);&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;&lt;code style=&quot;padding-top: 0px;padding-right: 3px;padding-bottom: 0px;padding-left: 3px;font-weight: inherit;font-style: inherit;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #fff7f0;margin: 0px;border: 1px solid #cccccc&quot;&gt;everyauth&lt;/code&gt; 모듈은 npm을 통해 설치할 수 있다.&lt;/p&gt;
&lt;pre style=&quot;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Courier New&#39;, Courier, monospace;vertical-align: baseline;background-color: #ffffff;line-height: 1.3em;color: #222222;font-variant: normal;letter-spacing: normal;text-align: -webkit-auto;text-indent: 0px;padding: 1em;margin: 1em;border: 1px solid #cccccc&quot;&gt;npm install everyauth
&lt;/pre&gt;
&lt;p style=&quot;margin-top: 0px;margin-right: 0px;margin-bottom: 1em;margin-left: 0px;font-weight: normal;font-style: normal;font-size: 13px;font-family: &#39;Helvetica Neue&#39;, Arial, Helvetica, sans-serif;vertical-align: baseline;color: #222222;font-variant: normal;letter-spacing: normal;line-height: 20px;text-align: -webkit-auto;text-indent: 0px;background-color: #ffffff;padding: 0px;border: 0px initial initial&quot;&gt;EveryAuth의 GitHub 사이트: &lt;a href=&quot;https://github.com/bnoguchi/everyauth&quot;&gt;https://github.com/bnoguchi/everyauth&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Jan 2012 01:56:34 +0900</pubDate>
        <link>http://zzoon.github.io/insidejs/insidejs/2012/01/05/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-14-everyauth.html</link>
        <guid isPermaLink="true">http://zzoon.github.io/insidejs/insidejs/2012/01/05/node-js-ec-9c-a0-ec-9a-a9-ed-95-9c-eb-aa-a8-eb-93-88-14-everyauth.html</guid>
        
        
      </item>
    
      <item>
        <title>NPM을 통한 모듈 의존성 관리</title>
        <description>&lt;p&gt;원문 링크 - http://howtonode.org/managing-module-dependencies&lt;/p&gt;

&lt;h1&gt;모듈 의존성 관리하기&lt;/h1&gt;

&lt;p&gt;node.js 메일링 리스트에서 모듈 의존성 관리에 대한 논쟁 후에, 나는 이곳에 몇가지 사항을 공유하는 것이 의미있을 것이라 생각했다.&lt;/p&gt;

&lt;h2&gt;NPM을 통한 모듈 의존성 기술하기&lt;/h2&gt;
&lt;p&gt;당신이 여러개의 NPM 모듈들에 의존적인 애플리케이션을 개발중이라면, 다음과 같은 방식으로 package.json 파일을 작성해서 의존성을 기술할 수 있다.&lt;/p&gt;

&lt;p&gt;[code lang=”js”]
&quot;dependencies&quot;: {
  &quot;express&quot;: &quot;2.3.12&quot;,
  &quot;jade&quot;: &quot;&amp;gt;= 0.0.1&quot;,
  &quot;redis&quot;:   &quot;0.6.0&quot;
}
[/code]&lt;/p&gt;

&lt;p&gt;이를 통해 당신이 프로젝트를 갱신할 때마다, 다음과 같은 npm 명령을 통해 의존성을 해결할 수 있다.&lt;/p&gt;

&lt;p&gt;[code lang=”bash”]
$ npm install
[/code]&lt;/p&gt;

&lt;p&gt;당신의 프로그램을 구동하기 위해,  특정 버전의 모듈이 필요로 하거나 버전 번호 앞에 &amp;gt;= 를 붙여 앱 실행을 위한 최소 버전을 요구할 수 있다.&lt;/p&gt;

&lt;h2&gt;개발 버전을 위한 의존성 관리&lt;/h2&gt;
&lt;p&gt;만약 실제 제품이 아닌 개발 버전에서만의 의존성 (예. 테스팅 프레임워크)을 제공하기 위해서는 &lt;strong&gt;devDependencies&lt;/strong&gt; 속성을 사용하면 된다.&lt;/p&gt;

&lt;p&gt;[code lang=”javascript”]
&quot;devDependencies&quot;: {
  &quot;vows&quot;: &quot;&amp;gt;= 0.4.x&quot;
}
[/code]&lt;/p&gt;

&lt;p&gt;실제 제품을 릴리즈 할 때는 &lt;strong&gt;npm install –production&lt;/strong&gt; 명령을 실행하면, 개발 버전의 의존성을 가진 모듈의 설치는 제외된다.&lt;/p&gt;

&lt;h2&gt;private NPM 모듈 관리&lt;/h2&gt;
&lt;p&gt;당신이 private 모듈 상태로 개발한다면, package.json 파일에 &lt;strong&gt;“private”: true&lt;/strong&gt;를 추가해서 당신이 작성한 모듈이잘못해서 NPM 레지스트리에 등록되는 것을 막을 수 있다.&lt;/p&gt;

&lt;h2&gt;git 저장소의 모듈 의존성 기술하기&lt;/h2&gt;
&lt;p&gt;마지막으로 여러분이 개발한 모듈을 private git 저장소에서 제공하면서, 이 모듈에 의존하는 어떤 프로젝트를 개발한다면 모듈 의존성을 다음과 같이 작성할 수 있다.&lt;/p&gt;

&lt;p&gt;[code lang=”js”]
&quot;dependencies&quot;: {
    &quot;secret-module&quot;: &quot;git+ssh://git@github.com:username/secret-repo.git#v2.3&quot;
}
[/code]&lt;/p&gt;

&lt;p&gt;URL의 마지막 부분의 v2.3은 어떤 태그가 사용될지 기술한다. 커밋 해시나 브랜치명을 기술할 수도 있다.&lt;/p&gt;
</description>
        <pubDate>Tue, 03 Jan 2012 23:35:19 +0900</pubDate>
        <link>http://zzoon.github.io/insidejs/insidejs/2012/01/03/npm-ec-9d-84-ed-86-b5-ed-95-9c-eb-aa-a8-eb-93-88-ec-9d-98-ec-a1-b4-ec-84-b1-ea-b4-80-eb-a6-ac.html</link>
        <guid isPermaLink="true">http://zzoon.github.io/insidejs/insidejs/2012/01/03/npm-ec-9d-84-ed-86-b5-ed-95-9c-eb-aa-a8-eb-93-88-ec-9d-98-ec-a1-b4-ec-84-b1-ea-b4-80-eb-a6-ac.html</guid>
        
        
      </item>
    
  </channel>
</rss>
